<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AuthMapper">
	
    <select id="selectAuthComboList" resultType="map">
        SELECT BASIC_CD
		 	 , CD_NM
		 	 , CD_DESCRIPTION 
		  FROM TB_BASIC_CD
		 WHERE BASIC_CD IN ('*','00','10','20','30','40','50')
    </select>
    
	<select id="selectMenuList" resultType="map">
		SELECT A.ID
			 , A.TITLE
			 , A.DESCRIPTION
			 , A.Roles
			 , A.URL
			 , A.PARENT
			 , A.TP
			 , A.IDX_MENU
			 , A.DESIGN_PAGE_ID
			 , A.BOARD_CD
			 , A.Hide
			 , B.IDX_VIEW_PROGRAM
		     , B.IDX_GRP_ID
		     , 'idxTemplate/' + B.IDX_VIEW_PROGRAM AS PAGE_TEMPLATE_PATH
		FROM TB_CONFIG_SITEMAP_20190909 A
		LEFT OUTER JOIN TB_IDX_PAGE B
		  ON A.IDX_MENU = B.IDX_MENU
	   WHERE 1=1
	   <if test="menuNm != null and !menuNm.equals('')">
         AND A.DESCRIPTION LIKE '%' + #{menuNm} + '%'
       </if>
	   ORDER BY A.URL, A.ID, A.PARENT
	</select>
	
	<select id="selectMenuAuthList" resultType="map">
	    SELECT A.MENU_CD
		     , A.MENU_NM
		     , A.BOARD_CD
			 , B.MEMBER_CLASS_CD
			 , C.CD_NM
			 , B.VW_AUTH
			 , B.UDT_AUTH
			 , B.REG_AUTH
			 , B.DEL_AUTH
		 FROM TB_MENU_20190909 A
		 JOIN TB_MENU_AUTH B
		   ON A.MENU_CD = B.MENU_CD
		 LEFT OUTER JOIN (SELECT BASIC_CD
		 					   , CD_NM
		 					   , CD_DESCRIPTION 
		 					FROM TB_BASIC_CD
		  		 		   WHERE BASIC_CD IN ('*','00','10','20','30','40','50')) C
		   ON B.MEMBER_CLASS_CD = C.BASIC_CD
		WHERE 1=1
		  AND A.MENU_CD = #{menuCd}	    
	</select>
	
	<delete id="deleteAuthList" parameterType="map">
	    DELETE FROM TB_MENU_AUTH
	     WHERE MENU_CD = #{MENU_CD}
		   AND MEMBER_CLASS_CD = #{MEMBER_CLASS_CD}
	</delete>
	
	<update id="updateAuthList" parameterType="map">
	    UPDATE TB_MENU_AUTH
	       SET VW_AUTH = ISNULL(#{VW_AUTH ,jdbcType=VARCHAR},'0')
	         , UDT_AUTH = ISNULL(#{UDT_AUTH ,jdbcType=VARCHAR},'0')
	         , REG_AUTH = ISNULL(#{REG_AUTH ,jdbcType=VARCHAR},'0')
	         , DEL_AUTH = ISNULL(#{DEL_AUTH ,jdbcType=VARCHAR},'0')
	         , UDT_ID = #{session.userId, jdbcType=VARCHAR}
	         , UDT_DT = getDate()
		 WHERE MENU_CD = #{MENU_CD}
		   AND MEMBER_CLASS_CD = #{MEMBER_CLASS_CD}
	</update>
	
	<insert id="insertAuthList" parameterType="map">
	    INSERT INTO TB_MENU_AUTH (
	    	MENU_CD,
	    	MEMBER_CLASS_CD,
	    	VW_AUTH,
	    	UDT_AUTH,
	    	REG_AUTH,
	    	DEL_AUTH,
	    	REG_ID,
	    	UDT_ID,
	    	REG_DT,
	    	UDT_DT
	    )VALUES(
	    	#{MENU_CD}
	    	,#{MEMBER_CLASS_CD}
	    	,ISNULL(#{VW_AUTH, jdbcType=VARCHAR}, 0)
	    	,ISNULL(#{UDT_AUTH, jdbcType=VARCHAR}, 0)
	    	,ISNULL(#{REG_AUTH, jdbcType=VARCHAR}, 0)
	    	,ISNULL(#{DEL_AUTH, jdbcType=VARCHAR}, 0)
	    	,#{session.userId}
	    	,''
	    	,GetDate()
	    	,''
	    )
	</insert>
	
	<select id="selectOneList" resultType="map">
	    SELECT COUNT(*) AS CNT FROM TB_MENU_AUTH
	     WHERE MENU_CD = #{MENU_CD}
	       AND MEMBER_CLASS_CD = #{MEMBER_CLASS_CD}
	</select>
	
	<select id="selectBoardCdList" resultType="map">
	    SELECT DISTINCT BOARD_CD
	      FROM TB_MENU_20190909
		 WHERE MENU_CD LIKE #{MENU_CD}+'%'
		   AND MENU_CD NOT IN (#{MENU_CD})
		   AND BOARD_CD IS NOT NULL
	</select>
	
	<delete id="deleteBoardAuthList" parameterType="map">
	    DELETE FROM TB_BOARD_AUTH
	     WHERE BOARD_CD = #{BOARD_CD}
	       AND MEMBER_CLASS_CD = #{MEMBER_CLASS_CD}
	</delete>
	
	<update id="saveBoardAuthList" parameterType="map">
		MERGE TB_BOARD_AUTH AUTH
		USING (SELECT #{BOARD_CD} AS BOARD_CD, #{MEMBER_CLASS_CD} AS CLASS_CD) TARGET
		   ON (AUTH.BOARD_CD = TARGET.BOARD_CD AND AUTH.MEMBER_CLASS_CD = TARGET.CLASS_CD)
		 WHEN MATCHED THEN
		 UPDATE 
			SET LIST_AUTH = 0
			  , VW_AUTH = #{VW_AUTH}
			  , REG_AUTH = #{REG_AUTH}
			  , COMMENT_REG_AUTH = #{VW_AUTH}
			  , UDT_ID = #{session.userId, jdbcType=VARCHAR}
			  , UDT_DT = GetDate()
		 WHEN NOT MATCHED THEN
		 INSERT (BOARD_CD, MEMBER_CLASS_CD, LIST_AUTH, VW_AUTH, REG_AUTH, COMMENT_REG_AUTH, REG_ID, UDT_ID, REG_DT, UDT_DT)
		 VALUES (
			#{BOARD_CD, jdbcType=VARCHAR},#{MEMBER_CLASS_CD, jdbcType=VARCHAR},
			0,0,0,0,
			#{session.userId, jdbcType=VARCHAR},'',GetDate(),
			''
         ); 	    
	</update>
		
</mapper>