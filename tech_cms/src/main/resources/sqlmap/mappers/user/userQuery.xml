<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	
    <!-- 사용자 구분 콤보박스 조회 -->
	<select id="selectUserDivList" resultType="map">
		SELECT BASIC_CD, CD_NM, CD_DESCRIPTION FROM TB_BASIC_CD
  		 WHERE BASIC_CD IN ('*','00','10','20','30','40','50')
	</select>
	
	<!-- 사용자 정보 조회(paging) -->
	<select id="selectUserDataList" resultType="map">
	    SELECT A.TOT_CNT - (A.rownum - 1) AS RNUM
	  		  ,A.*
	  		  ,A.TOT_CNT
	  		  ,CEILING(A.TOT_CNT / 15) AS TOT_PAGE
  		  FROM (SELECT Row_Number() OVER (ORDER BY X.TT DESC) AS rownum
	  				  ,X.*
	  				  ,COUNT(X.CNT) OVER() AS TOT_CNT
  				  FROM (SELECT 'tt' AS TT
	  						  , 1 AS CNT
							  ,A.*
							  ,B.USER_NM
							  ,B.REG_DT
					      FROM TB_MEMBER_ID A
						  JOIN TB_MEMBERINFO B
							ON A.USER_ID = B.USER_ID) X
         		) A
         WHERE A.rownum > (#{pageNo} - 1) * 15
		   AND #{pageNo} * 15 >= A.rownum
		ORDER BY A.USER_NM, A.USER_ID
	</select>
	
	<!-- 사용자 정보 조회 (non paging) -->
	<select id="selectUserDataNonPagingList" resultType="map">
	    SELECT A.USER_ID
	    	 , A.MEMBER_CLASS_CD
	    	 , A.LEAVE_DESCRIPTION
	    	 , convert(varchar(10), A.LEAVE_DT, 112) AS LEAVE_DT
			 , B.USER_NM
			 , B.USER_PHONE
			 , B.USER_MOBILE
			 , B.USER_EMAIL
			 , ISNULL(B.USER_MAIL_RECEIVE,'0') AS USER_MAIL_RECEIVE
			 , ISNULL(B.DESCRIPTION,'0') AS DESCRIPTION 
			 , ISNULL(B.DEL_YN,'0') AS DEL_YN
			 , B.COMP_NM
			 , B.PART_NM
			 , B.POSITION
			 , B.COMP_PHONE
			 , B.CERTIFY_KEY
			 , convert(varchar(10), B.CERTIFY_DT, 112) AS CERTIFY_DT
			 , B.REG_ID
			 , B.UDT_ID
			 , convert(varchar(10), B.REG_DT, 112) AS REG_DT
			 , convert(varchar(10), B.UDT_DT, 112) AS UDT_DT
			 , ISNULL(B.STATUS,'0') AS STATUS
			 , B.COMP_CLASS_CD
		  FROM TB_MEMBER_ID A
		  JOIN TB_MEMBERINFO B
			ON A.USER_ID = B.USER_ID
		 WHERE 1=1
		 <if test="userId != null and !userId.equals('')">
           AND B.USER_NM LIKE '%' + #{userId} + '%'
         </if>
	     <if test="userDiv != null and !userDiv.equals('')">
           AND A.MEMBER_CLASS_CD = #{userDiv}
         </if>
         <if test="receive != null and !receive.equals('')">
           AND B.USER_MAIL_RECEIVE = #{receive}
         </if>
		 ORDER BY B.USER_NM, A.USER_ID
	</select>
	
	<!-- 사용자 정보 수정 -->
	<update id="updateUserDataList" parameterType="map">
	    UPDATE TB_MEMBERINFO
	       SET USER_NM = #{USER_NM ,jdbcType=VARCHAR}
	         , USER_PHONE = #{USER_PHONE ,jdbcType=VARCHAR}
	         , USER_MOBILE = #{USER_MOBILE ,jdbcType=VARCHAR}
	         , USER_EMAIL = #{USER_EMAIL ,jdbcType=VARCHAR}
	         , USER_MAIL_RECEIVE = #{USER_MAIL_RECEIVE ,jdbcType=VARCHAR}
	         , DESCRIPTION = #{DESCRIPTION ,jdbcType=VARCHAR}
	         , DEL_YN = #{DEL_YN ,jdbcType=VARCHAR}
	         , COMP_NM = #{COMP_NM ,jdbcType=VARCHAR}
	         , PART_NM = #{PART_NM ,jdbcType=VARCHAR}
	         , POSITION = #{POSITION ,jdbcType=VARCHAR}
	         , COMP_PHONE = #{COMP_PHONE ,jdbcType=VARCHAR}
	         , CERTIFY_KEY = #{CERTIFY_KEY ,jdbcType=VARCHAR}
	         <!-- , CERTIFY_DT -->
	         , STATUS = #{STATUS ,jdbcType=VARCHAR}
	         , COMP_CLASS_CD = #{COMP_CLASS_CD ,jdbcType=VARCHAR}
	         , UDT_ID = #{session.userId, jdbcType=VARCHAR}
	         , UDT_DT = getDate()
		 WHERE USER_ID = #{USER_ID}
	</update>
	
	<!-- 사용자 정보 수정 -->
	<update id="updateUserInfoDataList" parameterType="map">
	    UPDATE TB_MEMBER_ID
	       SET MEMBER_CLASS_CD = #{MEMBER_CLASS_CD ,jdbcType=VARCHAR}
	         , LEAVE_DESCRIPTION = #{LEAVE_DESCRIPTION ,jdbcType=VARCHAR}
	         , LEAVE_DT = #{LEAVE_DT ,jdbcType=VARCHAR}
		 WHERE USER_ID = #{USER_ID}
	</update>
	
	
</mapper>