<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MenuMapper">


	

	<select id="selectMenuList" resultType="map">
		SELECT DISTINCT * FROM (
		SELECT
		MENU.MENU_CD
		,MENU.MENU_NM
		,MENU.MENU_DESCRIPTION
		,MENU.LINK_OPTION
		, CASE
		WHEN MENU.IDX_MENU IS NOT NULL THEN 'IDX'
		WHEN MENU.DESIGN_PAGE_ID IS NOT NULL THEN 'DESIGNPAGE'
		WHEN MENU.BOARD_CD IS NOT NULL THEN 'BOARD'
		WHEN MENU.URL IS NOT NULL THEN 'URL'
		ELSE ''
		END AS TMPCLASS
		, CASE
		WHEN MENU.IDX_MENU IS NOT NULL THEN IDXPAGE.IDX_PAGE_NM
		WHEN MENU.DESIGN_PAGE_ID IS NOT NULL THEN DESIGNPAGE.DESIGN_PAGE_NM
		WHEN MENU.BOARD_CD IS NOT NULL THEN BOARDSETUP.TITLE
		WHEN MENU.URL IS NOT NULL THEN MENU.URL
		ELSE ''
		END AS TMPCLASSNM
		,MENU.MENU_CHARGE
		,MENU.URL
		,MENU.BOM_CD.GetAncestor(1).ToString() AS PARENTBOM
		,MENU.BOM_CD
		,MENU.BOM_CD.GetLevel() as BOM_LEV
		,MENU.BOM_CD.ToString() as BOM_TEXT
		,MENU.REG_ID
		,MENU.REG_DT
		,MENU.UDT_ID
		,MENU.UDT_DT
		,MENU.IDX_MENU
		,CONFIG.IDX_MENU AS C_IDX_MENU
		,MENU.DESIGN_PAGE_ID
		,CONFIG.DESIGN_PAGE_ID AS C_DESIGN_PAGE_ID
		,MENU.BOARD_CD
		,MEMINFO.USER_NM AS TMPMENU_CHARGE
		,MENU.ORDER_IDX
		,CONFIG.URL AS C_URL
		,CONFIG.PAGE_PATH
		,CONFIG.PARENT
		,CONFIG.DESCRIPTION
		,CONFIG.ROLES
		,CONFIG.TITLE
		,CONFIG.TP
		,CONFIG.HIDE
		,CONFIG.BOARD_CD AS C_BOARD_CD
		FROM TB_MENU_20190909 AS MENU


		LEFT OUTER JOIN TB_BOARD_SETUP AS BOARDSETUP
		ON MENU.BOARD_CD = BOARDSETUP.BOARD_CD
		LEFT OUTER JOIN TB_CONFIG_SITEMAP_20190909 CONFIG
		ON MENU.MENU_CD = CONFIG.ID
		LEFT OUTER JOIN TB_DESIGN_PAGES AS DESIGNPAGE
		ON MENU.DESIGN_PAGE_ID = DESIGNPAGE.DESIGN_PAGE_ID
		LEFT OUTER JOIN TB_IDX_PAGE AS IDXPAGE
		LEFT OUTER JOIN TB_IDX_CATE_CD AS IDXCATE
		ON IDXPAGE.IDX_MENU = IDXCATE.IDX_CATE_ID
		ON MENU.IDX_MENU = IDXPAGE.IDX_MENU
		LEFT OUTER JOIN TB_MEMBERINFO AS MEMINFO
		ON MENU.MENU_CHARGE = MEMINFO.USER_ID ) MENU
		<if test="PARENTBOM != null">
			WHERE MENU.PARENTBOM = #{PARENTBOM}
		</if>
		ORDER BY MENU.BOM_CD , MENU.BOM_LEV
	</select>

	<update id="saveMenu" parameterType="map">
		MERGE TB_MENU_20190909 MENU
		USING (SELECT #{MENU_CD} AS MENU_CD )
		TARGET
		ON (MENU.MENU_CD = TARGET.MENU_CD)
		WHEN MATCHED THEN
		UPDATE
		SET MENU_NM = #{MENU_NM}
		, LINK_OPTION = #{LINK_OPTION}
		, MENU_DESCRIPTION = #{MENU_DESCRIPTION}
		<if test="MENU_CHARGE != null and !MENU_CHARGE.equals('')">
			, MENU_CHARGE = #{MENU_CHARGE, jdbcType=VARCHAR}
		</if>
		<if test="BOARD_CD != null and !BOARD_CD.equals('')">
			, BOARD_CD = #{BOARD_CD, jdbcType=VARCHAR}
		</if>
		, UDT_ID = #{session.userId}
		, UDT_DT = GETDATE()
		, ORDER_IDX = #{ORDER_IDX}
		WHEN NOT MATCHED THEN
		INSERT (BOM_CD, MENU_CD, MENU_NM, URL, LINK_OPTION, MENU_DESCRIPTION,
		IDX_MENU, DESIGN_PAGE_ID, BOARD_CD,
		<if test="MENU_CHARGE != null and !MENU_CHARGE.equals('')">
			MENU_CHARGE,
		</if>
		REG_DT, UDT_DT, REG_ID, UDT_ID, ORDER_IDX)
		VALUES (
		(SELECT BOM_CD.GetDescendant((SELECT MAX(BOM_CD) FROM TB_MENU_20190909 WHERE
		BOM_CD.GetAncestor(1) = #{PARENTBOM}), null) FROM TB_MENU_20190909
		WHERE BOM_CD = #{PARENTBOM})
		,#{MENU_CD},#{MENU_NM},#{URL},#{LINK_OPTION},#{MENU_DESCRIPTION},#{IDX_MENU},#{DESIGN_PAGE_ID},#{BOARD_CD}
		<if test="MENU_CHARGE != null and !MENU_CHARGE.equals('')">
			,#{MENU_CHARGE, jdbcType=VARCHAR}
		</if>
		,GETDATE(),GETDATE(),#{session.userId},#{session.userId}, #{ORDER_IDX}
		);
	</update>

	<update id="saveConfigSitemap" parameterType="map">
		MERGE TB_CONFIG_SITEMAP_20190909 CONFIG
		USING (SELECT #{MENU_CD} AS ID
		) TARGET
		ON (CONFIG.ID = TARGET.ID)
		WHEN MATCHED THEN
		UPDATE
		SET TITLE = #{TITLE}
		, DESCRIPTION = #{DESCRIPTION}
		, ROLES = #{ROLES}
		, URL = #{C_URL}
		, PARENT = #{PARENT}
		<if test="C_BOARD_CD != null and !C_BOARD_CD.equals('')">
			, BOARD_CD = #{C_BOARD_CD, jdbcType=VARCHAR}
		</if>
		, TP = #{TP}
		, PAGE_PATH = #{PAGE_PATH}
		, IDX_MENU = #{C_IDX_MENU}
		, DESIGN_PAGE_ID = #{C_DESIGN_PAGE_ID}
		<if test="HIDE != null and !HIDE.equals('')">
			, HIDE = #{HIDE}
		</if>
		WHEN NOT MATCHED THEN
		INSERT (ID, TITLE, DESCRIPTION, ROLES, URL, PARENT, TP, PAGE_PATH, IDX_MENU,
		DESIGN_PAGE_ID, BOARD_CD, HIDE)
		VALUES (
		#{MENU_CD},#{TITLE, jdbcType=VARCHAR},#{DESCRIPTION, jdbcType=VARCHAR},#{ROLES,
		jdbcType=VARCHAR}
		,#{C_URL, jdbcType=VARCHAR},#{PARENT, jdbcType=VARCHAR},#{TP,
		jdbcType=VARCHAR},#{PAGE_PATH, jdbcType=VARCHAR}
		,#{C_IDX_MENU, jdbcType=VARCHAR},#{C_DESIGN_PAGE_ID, jdbcType=VARCHAR}
		,#{BOARD_CD, jdbcType=VARCHAR},#{HIDE, jdbcType=VARCHAR}
		);
	</update>

	<delete id="deleteMenuAuth" parameterType="map">
		DELETE FROM
		TB_MENU_AUTH WHERE MENU_CD = #{MENU_CD}
	</delete>

	<delete id="deleteMenu" parameterType="map">
		DELETE FROM
		TB_MENU_20190909 WHERE MENU_CD = #{MENU_CD}
	</delete>

	<delete id="deleteConfigmap" parameterType="map">
		DELETE FROM
		TB_CONFIG_SITEMAP_20190909 WHERE ID = #{MENU_CD}
	</delete>

	<select id="selectComboList" parameterType="map" resultType="map">
		<!-- designPage -->
		<if test="TMPCLASS != null and TMPCLASS.equals('DESIGNPAGE')">
			SELECT
			DESIGN_PAGE_ID, DESIGN_PAGE_NM
			FROM TB_DESIGN_PAGES
		</if>
		<!-- board -->
		<if test="TMPCLASS != null and TMPCLASS.equals('BOARD')">
			SELECT
			BOARD_CD ,TITLE ,SUBSCRIPTION ,DESCRIPTION
			FROM TB_BOARD_SETUP
		</if>
		<!-- Jisu -->
		<if test="TMPCLASS != null and TMPCLASS.equals('IDX')">
			SELECT
			IDX_PAGE.IDX_MENU
			,IDX_PAGE.IDX_VIEW_PROGRAM
			,IDX_PAGE.IDX_GRP_ID
			,IDX_PAGE.IDX_GRP_NM
			,TB_IDX_CATE_CD.IDX_NM
			,IDX_PAGE.IDX_PAGE_NM
			FROM
			( SELECT
			IDX_PAGE.IDX_MENU
			,IDX_PAGE.IDX_VIEW_PROGRAM
			,IDX_PAGE.IDX_GRP_ID
			,IDX_GRP.IDX_GRP_NM
			,IDX_PAGE.IDX_PAGE_NM ,
			(SELECT TOP 1 IDX_CATE_ID FROM TB_IDX_PAGE_CATE WHERE IDX_MENU =
			IDX_PAGE.IDX_MENU ) AS CATE_ID
			FROM TB_IDX_PAGE AS IDX_PAGE
			LEFT OUTER JOIN TB_IDX_GRP AS IDX_GRP
			ON IDX_PAGE.IDX_GRP_ID = IDX_GRP.IDX_GRP_ID ) AS IDX_PAGE
			LEFT OUTER JOIN TB_IDX_CATE_CD
			ON TB_IDX_CATE_CD.IDX_CATE_ID = IDX_PAGE.CATE_ID
		</if>
		<!-- Charge -->
		<if test="TMPCLASS != null and TMPCLASS.equals('MENU_CHARGE')">
			SELECT
			MEM.USER_ID
			,MEM.MEMBER_CLASS_CD
			,USERCLASS.CD_NM AS TMPMEMBER_CLASS_CD
			,MEM.LEAVE_DT
			,MEM.LEAVE_DESCRIPTION
			,MEMBERINFO.DEL_YN
			,MEMBERINFO.USER_NM
			,MEMBERINFO.COMP_CLASS_CD
			,COMPCLASS.CD_NM AS TMPCOMP_CLASS_CD
			,MEMBERINFO.STATUS
			FROM TB_MEMBERINFO AS MEMBERINFO
			INNER JOIN TB_MEMBER_ID AS MEM
			LEFT OUTER JOIN dbo.FUNC_GET_TB_BASIC_CD('USERCLASS',1) AS USERCLASS
			ON MEM.MEMBER_CLASS_CD = USERCLASS.BASIC_CD
			ON MEMBERINFO.USER_ID = MEM.USER_ID
			LEFT OUTER JOIN dbo.FUNC_GET_TB_BASIC_CD('COMPCLASS',1) AS COMPCLASS
			ON MEMBERINFO.COMP_CLASS_CD = COMPCLASS.BASIC_CD
			WHERE MEM.MEMBER_CLASS_CD IN ('00','10','20')
		</if>

	</select>

</mapper>